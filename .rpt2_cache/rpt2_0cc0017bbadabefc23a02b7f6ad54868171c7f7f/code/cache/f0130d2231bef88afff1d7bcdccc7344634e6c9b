{
  "code": "import { GameData } from \"../common/GameData\";\r\nimport GameEvent from \"../common/GameEvent\";\r\nimport GameInfoManager from \"./GameInfoManager\";\r\nimport GameConst from \"../common/GameConst\";\r\nimport PowerMgr from \"./PowerMgr\";\r\nimport SignManager from \"./SignManager\";\r\nexport var Prop;\r\n(function (Prop) {\r\n    Prop[Prop[\"Power\"] = 1001] = \"Power\";\r\n    Prop[Prop[\"Gold\"] = 1002] = \"Gold\";\r\n})(Prop || (Prop = {}));\r\nvar GameMgr = (function () {\r\n    function GameMgr() {\r\n        this.autoShowSign = false;\r\n        this.topBarIsShow = true;\r\n        this.bannerIsShow = true;\r\n    }\r\n    Object.defineProperty(GameMgr, \"instance\", {\r\n        get: function () {\r\n            if (!GameMgr.ins)\r\n                GameMgr.ins = new GameMgr();\r\n            return GameMgr.ins;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GameMgr.prototype.initData = function () {\r\n        return new Promise(function (resolve) {\r\n            GameData.getInstance().playerData.loginCount += 1;\r\n            var curTime = (new Date()).getTime();\r\n            var isOneDay = Utils.judgeIsOnTheSameDay(GameData.getInstance().playerData.loginTime, curTime);\r\n            if (!isOneDay) {\r\n                var canSign = SignManager.instance.checkSign();\r\n                GameData.getInstance().playerData.loginTime = curTime;\r\n                GameData.getInstance().freePower[1] = false;\r\n                GameData.getInstance().playerData.shareVideoCount = 0;\r\n                GameInfoManager.getInstance().saveInfo(GameConst.BASE_INFO);\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    GameMgr.prototype.updateBaseData = function (id, value) {\r\n        switch (id) {\r\n            case Prop.Gold:\r\n                GameData.getInstance().playerData.gold += value;\r\n                if (GameData.getInstance().playerData.gold >= Number.MAX_VALUE) {\r\n                    GameData.getInstance().playerData.gold = Number.MAX_VALUE;\r\n                }\r\n                EventMgr.getInstance().sendEvent(GameEvent.REFRESH_TOP);\r\n                GameInfoManager.getInstance().saveInfo(GameConst.BASE_INFO);\r\n                break;\r\n            case Prop.Power:\r\n                PowerMgr.instance.changePowerUglify({ count: value });\r\n                break;\r\n            default:\r\n                console.warn(\"参数错误 ->\", id);\r\n        }\r\n    };\r\n    GameMgr.prototype.getIconUrlById = function (id) {\r\n        if (id == Prop.Power) {\r\n            return \"resource/assets/imgs/public/mianinterface_icon_1.png\";\r\n        }\r\n        else if (id == Prop.Gold) {\r\n            return \"resource/assets/imgs/public/mianinterface_icon_2.png\";\r\n        }\r\n        return \"\";\r\n    };\r\n    return GameMgr;\r\n}());\r\nexport default GameMgr;\r\nwindow['GameMgr'] = GameMgr;\r\n",
  "references": [
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameData.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameEvent.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/GameInfoManager.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameConst.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/PowerMgr.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/ConfigManager.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameDataType.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameConfigType.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/SignManager.ts"
  ]
}
