{
  "code": "import * as tslib_1 from \"tslib\";\r\nvar MiniManeger = (function () {\r\n    function MiniManeger() {\r\n        this.hideTime = 0;\r\n        this.showTime = 0;\r\n        this.shareInfo = [];\r\n        this.canShowBanner = true;\r\n        this.maxMakeVideoTime = 120;\r\n        this.moreGamesIsShow = false;\r\n    }\r\n    Object.defineProperty(MiniManeger, \"instance\", {\r\n        get: function () {\r\n            return MiniManeger.ins;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MiniManeger.prototype.compareVersion = function (v1, v2) {\r\n        var v1Arr = v1.split(\".\");\r\n        var v2Arr = v2.split(\".\");\r\n        var len = Math.max(v1Arr.length, v2Arr.length);\r\n        while (v1Arr.length < len) {\r\n            v1Arr.push(\"0\");\r\n        }\r\n        while (v2Arr.length < len) {\r\n            v2Arr.push(\"0\");\r\n        }\r\n        for (var i = 0; i < len; i++) {\r\n            var num1 = parseInt(v1Arr[i]);\r\n            var num2 = parseInt(v2Arr[i]);\r\n            if (num1 > num2) {\r\n                return 1;\r\n            }\r\n            else if (num1 < num2) {\r\n                return -1;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    MiniManeger.prototype.initMiniGame = function () {\r\n    };\r\n    MiniManeger.prototype.loginGame = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {\r\n            return [2];\r\n        }); });\r\n    };\r\n    MiniManeger.prototype.login = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {\r\n            return [2];\r\n        }); });\r\n    };\r\n    MiniManeger.prototype.getToken = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {\r\n            return [2];\r\n        }); });\r\n    };\r\n    MiniManeger.prototype.getUserInfo = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    MiniManeger.prototype.initUserInfo = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    MiniManeger.prototype.userButtonSize = function (percentTop, pectendSize, percentLeft) {\r\n    };\r\n    MiniManeger.prototype.createUserButton = function (style, isFullScene) {\r\n        if (isFullScene === void 0) { isFullScene = false; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    MiniManeger.prototype.onShow = function (callBack) {\r\n    };\r\n    MiniManeger.prototype.onHide = function (callBack) {\r\n    };\r\n    MiniManeger.prototype.onAudioInterruptionBegin = function (callBack) {\r\n    };\r\n    MiniManeger.prototype.onAudioInterruptionEnd = function (callBack) {\r\n    };\r\n    MiniManeger.prototype.shareAppMessage = function (data) {\r\n    };\r\n    MiniManeger.prototype.playViderAd = function (data) {\r\n        data.successFun && data.successFun();\r\n    };\r\n    MiniManeger.prototype.createBanner = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                return [2];\r\n            });\r\n        });\r\n    };\r\n    MiniManeger.prototype.showBannerAdSp = function () {\r\n    };\r\n    MiniManeger.prototype.showBannerAd = function (offset) {\r\n    };\r\n    MiniManeger.prototype.hideBanner = function () {\r\n    };\r\n    MiniManeger.prototype.showInsertAd = function (data) {\r\n        data.closeFun && data.closeFun();\r\n    };\r\n    MiniManeger.prototype.showAppBoxAd = function (data) {\r\n        data.closeFun && data.closeFun();\r\n    };\r\n    MiniManeger.prototype.vibrateShort = function (data) {\r\n    };\r\n    MiniManeger.prototype.vibrateLong = function () {\r\n    };\r\n    MiniManeger.prototype.adaptImgToClientRect = function (collec_img, stage) {\r\n    };\r\n    MiniManeger.prototype.sendDataToWxOpen = function (data) {\r\n    };\r\n    MiniManeger.prototype.removeOpenData = function (data) {\r\n    };\r\n    MiniManeger.prototype.addOpenWxData = function (data) {\r\n    };\r\n    MiniManeger.prototype.startGameRecord = function (data) { };\r\n    MiniManeger.prototype.stopGameRecord = function (force) {\r\n        if (force === void 0) { force = false; }\r\n    };\r\n    MiniManeger.prototype.shareGameVideo = function (data) { };\r\n    MiniManeger.prototype.showMoreGamesModal = function (data) { };\r\n    MiniManeger.prototype.showMoreGame = function (data) { };\r\n    return MiniManeger;\r\n}());\r\nexport { MiniManeger };\r\nvar MoreSomeAppInfo = (function () {\r\n    function MoreSomeAppInfo() {\r\n    }\r\n    return MoreSomeAppInfo;\r\n}());\r\nexport { MoreSomeAppInfo };\r\n",
  "references": [
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameConfigType.ts"
  ]
}
