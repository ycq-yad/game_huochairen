{
  "code": "import * as tslib_1 from \"tslib\";\r\nimport { GameData } from \"../common/GameData\";\r\nimport CommonTool from \"../tool/CommonTool\";\r\nimport GameConst from \"../common/GameConst\";\r\nvar GameInfoManager = (function () {\r\n    function GameInfoManager() {\r\n        this.URL = GameData.getInstance().URL_SAVE_DATA;\r\n    }\r\n    GameInfoManager.getInstance = function () {\r\n        if (!GameInfoManager.instance_) {\r\n            GameInfoManager.instance_ = new GameInfoManager();\r\n        }\r\n        return GameInfoManager.instance_;\r\n    };\r\n    GameInfoManager.prototype.getTimeStamp = function (callF) {\r\n        var timeStamp;\r\n        var _url = GameData.getInstance().URL_TIMESTAMP;\r\n        HttpMgr.getInstance().sendHttp(_url, null, function (e) {\r\n            timeStamp = e * 1000;\r\n            console.log(\"获取当前时间戳成功 ->\", timeStamp);\r\n            if (callF)\r\n                callF(timeStamp);\r\n        }, function (e) { });\r\n    };\r\n    GameInfoManager.prototype.selectInfo = function (key, isUseNet) {\r\n        var _this = this;\r\n        if (isUseNet === void 0) { isUseNet = false; }\r\n        return new Promise(function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var data, onlykey, str;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!isUseNet) return [3, 2];\r\n                        return [4, this.selectInfoByNet(key)];\r\n                    case 1:\r\n                        data = _a.sent();\r\n                        return [3, 3];\r\n                    case 2:\r\n                        onlykey = key + \"_\" + GameData.getInstance().userInfo.openId;\r\n                        str = Laya.LocalStorage.getItem(onlykey);\r\n                        if (str) {\r\n                            data = this.decodeData(str, key);\r\n                            console.log(\"\\u67E5\\u8BE2\\u952E\\u4E3A \" + key + \" \\u7684\\u6570\\u636E\\u6210\\u529F ->\", data);\r\n                        }\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        resolve(data);\r\n                        return [2];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    GameInfoManager.prototype.selectInfoByNet = function (key, callF, isLoading) {\r\n        var _this = this;\r\n        if (isLoading === void 0) { isLoading = true; }\r\n        return new Promise(function (resolve, reject) {\r\n            var gameId = GameData.getInstance().gameId;\r\n            var openId = GameData.getInstance().userInfo.openId + \"_\" + key;\r\n            var msg = {\r\n                msg_type: \"6\",\r\n                msg_data: {\r\n                    gameid: gameId,\r\n                    saveid: openId\r\n                }\r\n            };\r\n            HttpMgr.getInstance().sendHttp(_this.URL, msg, function (e) {\r\n                var code = e.msg_data.error_code;\r\n                var data;\r\n                if (code == \"0\") {\r\n                    console.log(\"\\u67E5\\u8BE2\\u952E\\u4E3A \" + key + \" \\u7684\\u6570\\u636E\\u6210\\u529F ->\", e.msg_data);\r\n                    data = _this.decodeData(e.msg_data.saveinfo, key);\r\n                }\r\n                else {\r\n                    var str = CommonTool.errorCodeTable[code];\r\n                    console.warn(\"\\u67E5\\u8BE2\\u952E\\u4E3A \" + key + \" \\u7684\\u6570\\u636E\\u5931\\u8D25:\" + str);\r\n                }\r\n                if (callF) {\r\n                    var obj = { code: code, key: key };\r\n                    callF(obj);\r\n                }\r\n                resolve(data);\r\n            }, function (e) { resolve(null); });\r\n        });\r\n    };\r\n    GameInfoManager.prototype.saveInfo = function (key, isUseNet) {\r\n        if (isUseNet === void 0) { isUseNet = false; }\r\n        if (isUseNet) {\r\n            this.saveInfoToNet(key);\r\n        }\r\n        else {\r\n            var str = this.encodeData(key);\r\n            var onlykey = key + \"_\" + GameData.getInstance().userInfo.openId;\r\n            Laya.LocalStorage.setItem(onlykey, str);\r\n            if (key != GameConst.BASE_INFO) {\r\n                console.log(\"\\u4FDD\\u5B58\\u952E\\u4E3A \" + key + \" \\u7684\\u6570\\u636E\\u6210\\u529F ->\");\r\n            }\r\n        }\r\n    };\r\n    GameInfoManager.prototype.saveInfoToNet = function (key, callF) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, new Promise(function (res, rej) {\r\n                            var str = _this.encodeData(key);\r\n                            var gameId = GameData.getInstance().gameId;\r\n                            var openId = GameData.getInstance().userInfo.openId + \"_\" + key;\r\n                            var msg = {\r\n                                msg_type: \"8\",\r\n                                msg_data: {\r\n                                    \"gameid\": gameId,\r\n                                    \"saveid\": openId,\r\n                                    \"saveinfo\": str\r\n                                }\r\n                            };\r\n                            HttpMgr.getInstance().sendHttp(_this.URL, msg, function (e) {\r\n                                var code = e.msg_data.error_code;\r\n                                if (code == \"0\") {\r\n                                    console.log(\"\\u4FDD\\u5B58\\u952E\\u4E3A \" + key + \" \\u7684\\u6570\\u636E\\u6210\\u529F ->\", e.msg_data);\r\n                                }\r\n                                else {\r\n                                    var str_1 = CommonTool.errorCodeTable[code];\r\n                                    console.warn(\"\\u4FDD\\u5B58\\u952E\\u4E3A \" + key + \" \\u7684\\u6570\\u636E\\u5931\\u8D25\\uFF1A\" + str_1);\r\n                                }\r\n                                if (callF) {\r\n                                    var obj = { code: code, key: key };\r\n                                    callF(obj);\r\n                                }\r\n                                res();\r\n                            }, function (e) { res(); });\r\n                        })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GameInfoManager.prototype.selectAllGameInfo = function (canUseNet) {\r\n        var _this = this;\r\n        if (canUseNet === void 0) { canUseNet = false; }\r\n        return new Promise(function (res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!canUseNet) return [3, 9];\r\n                        return [4, this.selectSingleInfo(GameConst.BASE_INFO, false)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4, this.selectSingleInfo(GameConst.SIGN_INFO, false)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4, this.selectSingleInfo(GameConst.INVITE_INFO, false)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [4, this.selectSingleInfo(GameConst.FREE_INFO, false)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [4, this.selectSingleInfo(GameConst.LEVEL_INFO, false)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [4, this.selectSingleInfo(GameConst.COLOR_INFO, false)];\r\n                    case 6:\r\n                        _a.sent();\r\n                        return [4, this.selectSingleInfo(GameConst.SKIN_INFO, false)];\r\n                    case 7:\r\n                        _a.sent();\r\n                        return [4, this.selectSingleInfo(GameConst.BRUSH_INFO, false)];\r\n                    case 8:\r\n                        _a.sent();\r\n                        return [3, 18];\r\n                    case 9: return [4, this.selectInfo(GameConst.BASE_INFO)];\r\n                    case 10:\r\n                        _a.sent();\r\n                        return [4, this.selectInfo(GameConst.SIGN_INFO)];\r\n                    case 11:\r\n                        _a.sent();\r\n                        return [4, this.selectInfo(GameConst.INVITE_INFO)];\r\n                    case 12:\r\n                        _a.sent();\r\n                        return [4, this.selectInfo(GameConst.FREE_INFO)];\r\n                    case 13:\r\n                        _a.sent();\r\n                        return [4, this.selectInfo(GameConst.LEVEL_INFO)];\r\n                    case 14:\r\n                        _a.sent();\r\n                        return [4, this.selectInfo(GameConst.COLOR_INFO)];\r\n                    case 15:\r\n                        _a.sent();\r\n                        return [4, this.selectInfo(GameConst.SKIN_INFO)];\r\n                    case 16:\r\n                        _a.sent();\r\n                        return [4, this.selectInfo(GameConst.BRUSH_INFO)];\r\n                    case 17:\r\n                        _a.sent();\r\n                        _a.label = 18;\r\n                    case 18:\r\n                        res();\r\n                        return [2];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    GameInfoManager.prototype.selectSingleInfo = function (key, isLoading) {\r\n        var _this = this;\r\n        if (isLoading === void 0) { isLoading = true; }\r\n        return new Promise(function (res) {\r\n            _this.selectInfoByNet(key, function (obj) {\r\n                if (obj.code == \"0\") {\r\n                    res(obj.code);\r\n                }\r\n                else if (obj.code == \"6\" || obj.code == \"25\") {\r\n                    _this.saveInfoToNet(key, function (obj1) {\r\n                        if (obj1.code != \"0\") {\r\n                            var str = CommonTool.errorCodeTable[obj1.code];\r\n                        }\r\n                        res(obj1.code);\r\n                    });\r\n                }\r\n                else {\r\n                    var str = CommonTool.errorCodeTable[obj.code];\r\n                    res(obj.code);\r\n                }\r\n            }, isLoading);\r\n        });\r\n    };\r\n    GameInfoManager.prototype.deleteData = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var i, msg_data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        i = 1;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(i <= 3)) return [3, 4];\r\n                        msg_data = {\r\n                            \"msg_type\": \"18\",\r\n                            \"msg_data\": {\r\n                                \"gameid\": GameData.getInstance().gameId,\r\n                                \"datatype\": i + \"\"\r\n                            }\r\n                        };\r\n                        return [4, HttpMgr.getInstance().sendHttp(GameData.getInstance().URL_DELETE_DATA, msg_data, function () {\r\n                                console.log(\"清理数据成功...\");\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        i++;\r\n                        return [3, 1];\r\n                    case 4: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GameInfoManager.prototype.decodeData = function (data, key) {\r\n        var obj = JSON.parse(data);\r\n        if (obj) {\r\n            switch (key) {\r\n                case GameConst.BASE_INFO:\r\n                    GameData.getInstance().playerData = obj;\r\n                    break;\r\n                case GameConst.SIGN_INFO:\r\n                    GameData.getInstance().signIn = obj;\r\n                    break;\r\n                case GameConst.INVITE_INFO:\r\n                    GameData.getInstance().invite = obj;\r\n                    break;\r\n                case GameConst.FREE_INFO:\r\n                    GameData.getInstance().freePower = obj;\r\n                    break;\r\n                case GameConst.LEVEL_INFO:\r\n                    GameData.getInstance().level = obj;\r\n                    break;\r\n                case GameConst.COLOR_INFO:\r\n                    GameData.getInstance().color = obj;\r\n                    break;\r\n                case GameConst.SKIN_INFO:\r\n                    GameData.getInstance().skin = obj;\r\n                    break;\r\n                case GameConst.BRUSH_INFO:\r\n                    GameData.getInstance().brush = obj;\r\n                    break;\r\n            }\r\n        }\r\n        return obj;\r\n    };\r\n    GameInfoManager.prototype.encodeData = function (key) {\r\n        var obj;\r\n        switch (key) {\r\n            case GameConst.BASE_INFO:\r\n                obj = GameData.getInstance().playerData;\r\n                break;\r\n            case GameConst.SIGN_INFO:\r\n                obj = GameData.getInstance().signIn;\r\n                break;\r\n            case GameConst.INVITE_INFO:\r\n                obj = GameData.getInstance().invite;\r\n                break;\r\n            case GameConst.FREE_INFO:\r\n                obj = GameData.getInstance().freePower;\r\n                break;\r\n            case GameConst.LEVEL_INFO:\r\n                obj = GameData.getInstance().level;\r\n                break;\r\n            case GameConst.COLOR_INFO:\r\n                obj = GameData.getInstance().color;\r\n                break;\r\n            case GameConst.SKIN_INFO:\r\n                obj = GameData.getInstance().skin;\r\n                break;\r\n            case GameConst.BRUSH_INFO:\r\n                obj = GameData.getInstance().brush;\r\n                break;\r\n        }\r\n        if (key != GameConst.BASE_INFO) {\r\n            console.log(\"\\u7F16\\u8BD1\\u952E\\u4E3A \" + key + \" \\u7684\\u6570\\u636E ->\", obj);\r\n        }\r\n        var str = JSON.stringify(obj);\r\n        return str;\r\n    };\r\n    GameInfoManager.prototype.selectLevelDataById = function (level) {\r\n        var onlykey = \"Level_\" + level + \"_\" + GameData.getInstance().userInfo.openId;\r\n        var str = Laya.LocalStorage.getItem(onlykey);\r\n        if (str) {\r\n            return JSON.parse(str);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    GameInfoManager.prototype.saveLevelDataById = function (level, arr) {\r\n        var onlykey = \"Level_\" + level + \"_\" + GameData.getInstance().userInfo.openId;\r\n        var str = JSON.stringify(arr);\r\n        Laya.LocalStorage.setItem(onlykey, str);\r\n        console.log(\"\\u4FDD\\u5B58\\u6210\\u529F\" + level);\r\n    };\r\n    return GameInfoManager;\r\n}());\r\nexport default GameInfoManager;\r\n",
  "references": [
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameData.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/tool/CommonTool.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameConst.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/views/Type2GameLineToolMgr.ts"
  ]
}
