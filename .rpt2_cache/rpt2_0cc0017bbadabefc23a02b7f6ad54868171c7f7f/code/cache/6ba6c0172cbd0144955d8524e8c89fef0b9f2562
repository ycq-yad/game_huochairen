{
  "code": "import * as tslib_1 from \"tslib\";\r\nimport { PopBaseScene } from \"../../PopBaseScene\";\r\nimport SignManager from \"../../../manager/SignManager\";\r\nimport { GameData } from \"../../../common/GameData\";\r\nimport { MiniManeger } from \"../../../minigame/MiniManeger\";\r\nimport SoundManager, { SoundConst } from \"../../../manager/SoundManager\";\r\nimport { SignItem } from \"./SignItem\";\r\nimport AnimationManager from \"../../../manager/AnimationManager\";\r\nimport GameMgr from \"../../../manager/GameMgr\";\r\nimport GameInfoManager from \"../../../manager/GameInfoManager\";\r\nimport GameConst from \"../../../common/GameConst\";\r\nvar SignScene = (function (_super) {\r\n    tslib_1.__extends(SignScene, _super);\r\n    function SignScene() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className_key = \"SignScene\";\r\n        _this.pointArr = [[0, 0], [260, 0], [520, 0], [0, 303], [260, 303], [520, 303], [0, 603]];\r\n        _this.signData = [];\r\n        _this.skin = \"skins/uiView/sign/SignView.json\";\r\n        return _this;\r\n    }\r\n    SignScene.prototype.removeEvent = function () {\r\n        this.btn_close.off(Laya.Event.CLICK, this, this.onCloseUglify);\r\n        this.btn_sign.off(Laya.Event.CLICK, this, this.onSignUglify);\r\n        this.box_double.off(Laya.Event.CLICK, this, this.onSelectUglify);\r\n    };\r\n    SignScene.prototype.onRemoved = function () {\r\n        _super.prototype.onRemoved.call(this);\r\n        this.removeEvent();\r\n        Laya.Tween.clearAll(this.btn_sign);\r\n    };\r\n    SignScene.prototype.refreshStateUglify = function () {\r\n        var curCanSign = SignManager.instance.checkSign();\r\n        if (curCanSign) {\r\n            this.btn_sign.visible = true;\r\n            this.lab_tip.visible = false;\r\n            if (GameData.getInstance().isConVersion || !GameData.getInstance().videoOpen) {\r\n                this.showDoubleUglify(false);\r\n                this.box_double.visible = false;\r\n            }\r\n            else {\r\n                this.box_double.visible = true;\r\n                this.showDoubleUglify(GameData.getInstance().selectDoule);\r\n                AnimationManager.instance.btnScaleAniLoop(this.btn_sign, this);\r\n            }\r\n        }\r\n        else {\r\n            this.btn_sign.visible = this.box_double.visible = false;\r\n            this.lab_tip.visible = true;\r\n            Laya.Tween.clearAll(this.btn_sign);\r\n        }\r\n    };\r\n    SignScene.prototype.refreshSignUglify = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var signData, box_sign, count, i, item;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, SignManager.instance.getSignDataUglify()];\r\n                    case 1:\r\n                        signData = _a.sent();\r\n                        this.signData = signData;\r\n                        box_sign = this.box_sign;\r\n                        count = signData.length;\r\n                        for (i = 0; i < count; i++) {\r\n                            item = this.box_sign.getChildAt(i);\r\n                            if (item) {\r\n                                item.setData(this.signData[i]);\r\n                            }\r\n                            else {\r\n                                item = new SignItem(this.signData[i]);\r\n                                item.x = this.pointArr[i][0];\r\n                                item.y = this.pointArr[i][1];\r\n                                this.box_sign.addChild(item);\r\n                            }\r\n                        }\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SignScene.prototype.showDoubleUglify = function (show) {\r\n        this.img_select.visible = show;\r\n        var desc = this.btn_sign.getChildByName(\"desc\");\r\n        desc.text = show ? \"双倍奖励\" : \"单倍奖励\";\r\n    };\r\n    SignScene.prototype.showInsertAd = function () {\r\n        MiniManeger.instance.showInsertAd({\r\n            successFun: function () {\r\n            },\r\n            closeFun: function () {\r\n            },\r\n            errorFun: function () {\r\n            }\r\n        });\r\n    };\r\n    SignScene.prototype.onSignUglify = function () {\r\n        SoundManager.instance.playEffect(SoundConst.BtnClick);\r\n        var self = this;\r\n        if (self.img_select.visible) {\r\n            self.grp_center.mouseEnabled = false;\r\n            MiniManeger.instance.playViderAd({\r\n                successFun: function () {\r\n                    self.getAwardUglify(2);\r\n                },\r\n                failFun: function () {\r\n                    self.grp_center.mouseEnabled = true;\r\n                },\r\n                errorFun: function () {\r\n                    self.grp_center.mouseEnabled = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            self.getAwardUglify(1);\r\n        }\r\n    };\r\n    SignScene.prototype.getAwardUglify = function (mul) {\r\n        if (mul === void 0) { mul = 1; }\r\n        for (var index = 0; index < this.signData.length; index++) {\r\n            var element = this.signData[index];\r\n            if (element.canSign) {\r\n                var data = element;\r\n                data.reward.forEach(function (v) {\r\n                    var awardId = v.type;\r\n                    if (awardId < 10000) {\r\n                        GameMgr.instance.updateBaseData(awardId, v.num * mul);\r\n                    }\r\n                });\r\n                GameData.getInstance().signIn.timeStamp = (new Date()).getTime();\r\n                GameData.getInstance().signIn.total_count += 1;\r\n                GameInfoManager.getInstance().saveInfo(GameConst.SIGN_INFO);\r\n                break;\r\n            }\r\n        }\r\n        this.initView();\r\n        this.grp_center.mouseEnabled = true;\r\n    };\r\n    SignScene.prototype.onSelectUglify = function () {\r\n        if (this.img_select.visible) {\r\n            this.showDoubleUglify(false);\r\n        }\r\n        else {\r\n            this.showDoubleUglify(true);\r\n        }\r\n    };\r\n    SignScene.prototype.onCloseUglify = function () {\r\n        SoundManager.instance.playEffect(SoundConst.BtnClick);\r\n        this.removeSelf();\r\n    };\r\n    SignScene.prototype.childrenCreated = function () {\r\n        _super.prototype.childrenCreated.call(this);\r\n    };\r\n    SignScene.prototype.addEvent = function () {\r\n        this.btn_close.on(Laya.Event.CLICK, this, this.onCloseUglify);\r\n        this.btn_sign.on(Laya.Event.CLICK, this, this.onSignUglify);\r\n        this.box_double.on(Laya.Event.CLICK, this, this.onSelectUglify);\r\n    };\r\n    SignScene.prototype.initView = function () {\r\n        if (DeviceUtil.isMZMiniGame() || DeviceUtil.isTTMiniGame())\r\n            this.showInsertAd();\r\n        this.showCloseBtn(this.btn_close);\r\n        this.refreshSignUglify();\r\n        this.refreshStateUglify();\r\n    };\r\n    return SignScene;\r\n}(PopBaseScene));\r\nexport { SignScene };\r\n",
  "references": [
    "E:/laya/project/laya_firePeople2_git_ts/src/script/views/PopBaseScene.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameDataType.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/SignManager.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameData.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/minigame/MiniManeger.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/SoundManager.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/views/uiView/sign/SignItem.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/AnimationManager.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/GameMgr.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/GameInfoManager.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameConst.ts"
  ]
}
