{
  "code": "import * as tslib_1 from \"tslib\";\r\nimport { GameData } from \"../common/GameData\";\r\nimport { MiniManeger } from \"../minigame/MiniManeger\";\r\nvar ConfigManager = (function () {\r\n    function ConfigManager() {\r\n        this.randomVersion = \"\";\r\n        this.URL = \"resource/assets/configs/\";\r\n        if (!DeviceUtil.isNative()) {\r\n            this.randomVersion = \"?v=\" + new Date().getTime();\r\n        }\r\n    }\r\n    Object.defineProperty(ConfigManager, \"instance\", {\r\n        get: function () {\r\n            if (!ConfigManager.ins)\r\n                ConfigManager.ins = new ConfigManager();\r\n            return ConfigManager.ins;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConfigManager.prototype.getSignConfig = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!!this.signConfig) return [3, 2];\r\n                        _a = this;\r\n                        return [4, this.loadCongigs(this.URL + \"SignConfig.json\")];\r\n                    case 1:\r\n                        _a.signConfig = (_b.sent());\r\n                        _b.label = 2;\r\n                    case 2: return [2, this.signConfig];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getInviteConfig = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!!this.inviteConfig) return [3, 2];\r\n                        _a = this;\r\n                        return [4, this.loadCongigs(this.URL + \"InviteConfig.json\")];\r\n                    case 1:\r\n                        _a.inviteConfig = (_b.sent());\r\n                        _b.label = 2;\r\n                    case 2: return [2, this.inviteConfig];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getFreePowerConfig = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!!this.freePowerConfig) return [3, 2];\r\n                        _a = this;\r\n                        return [4, this.loadCongigs(this.URL + \"FreePowerConfig.json\")];\r\n                    case 1:\r\n                        _a.freePowerConfig = (_b.sent());\r\n                        _b.label = 2;\r\n                    case 2: return [2, this.freePowerConfig];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getPatternConfig = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var configs;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this.patternConfig) return [3, 2];\r\n                        return [4, this.loadCongigs(this.URL + \"PatternConfig.json\")];\r\n                    case 1:\r\n                        configs = (_a.sent());\r\n                        configs.sort(function (a, b) {\r\n                            return a.sort - b.sort;\r\n                        });\r\n                        this.patternConfig = this.arrToObjById(configs);\r\n                        _a.label = 2;\r\n                    case 2: return [2, this.patternConfig];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getColorConfig = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a, _b;\r\n            return tslib_1.__generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!!this.colorConfig) return [3, 2];\r\n                        _a = this;\r\n                        _b = this.arrToObjById;\r\n                        return [4, this.loadCongigs(this.URL + \"ColorConfig.json\")];\r\n                    case 1:\r\n                        _a.colorConfig = _b.apply(this, [_c.sent()]);\r\n                        _c.label = 2;\r\n                    case 2: return [2, this.colorConfig];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getColorPriceConfig = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a, _b;\r\n            return tslib_1.__generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!!this.colorPriceConfig) return [3, 2];\r\n                        _a = this;\r\n                        _b = this.arrToObjById;\r\n                        return [4, this.loadCongigs(this.URL + \"ColorPriceConfig.json\")];\r\n                    case 1:\r\n                        _a.colorPriceConfig = _b.apply(this, [_c.sent()]);\r\n                        _c.label = 2;\r\n                    case 2: return [2, this.colorPriceConfig];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getVideoColorConfig = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a, _b;\r\n            return tslib_1.__generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!!this.videoColorConfig) return [3, 2];\r\n                        _a = this;\r\n                        _b = this.arrToObjById;\r\n                        return [4, this.loadCongigs(this.URL + \"VideoColorConfig.json\")];\r\n                    case 1:\r\n                        _a.videoColorConfig = _b.apply(this, [_c.sent()]);\r\n                        _c.label = 2;\r\n                    case 2: return [2, this.videoColorConfig];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getSkinConfig = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a, _b;\r\n            return tslib_1.__generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!!this.skinConfig) return [3, 2];\r\n                        _a = this;\r\n                        _b = this.arrToObjById;\r\n                        return [4, this.loadCongigs(this.URL + \"SkinConfig.json\")];\r\n                    case 1:\r\n                        _a.skinConfig = _b.apply(this, [_c.sent()]);\r\n                        _c.label = 2;\r\n                    case 2: return [2, this.skinConfig];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getBrushConfig = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a, _b;\r\n            return tslib_1.__generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!!this.brushConfig) return [3, 2];\r\n                        _a = this;\r\n                        _b = this.arrToObjById;\r\n                        return [4, this.loadCongigs(this.URL + \"BrushConfig.json\")];\r\n                    case 1:\r\n                        _a.brushConfig = _b.apply(this, [_c.sent()]);\r\n                        _c.label = 2;\r\n                    case 2: return [2, this.brushConfig];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getAniConf = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!!this.aniConf) return [3, 2];\r\n                        _a = this;\r\n                        return [4, this.loadCongigs(this.URL + \"game/type1/\" + \"aniConf.json\")];\r\n                    case 1:\r\n                        _a.aniConf = _b.sent();\r\n                        _b.label = 2;\r\n                    case 2: return [2, this.aniConf];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getLevelConf = function (level) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4, this.loadCongigs(this.URL + \"game/type1/\" + \"level\" + level + \".json\")];\r\n                    case 1:\r\n                        _a.levelConf = _b.sent();\r\n                        return [2, this.levelConf];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.getLevelConf2 = function (level) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4, this.loadCongigs(this.URL + \"game/type2/\" + \"level\" + level + \".json\")];\r\n                    case 1:\r\n                        _a.levelConf2 = _b.sent();\r\n                        return [2, this.levelConf2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.initConfigs = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.initConfig()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        resolve();\r\n                        return [2];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    ConfigManager.prototype.initConfig = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var conf;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.loadCongigs(\"configs/configs.json\")];\r\n                    case 1:\r\n                        conf = _a.sent();\r\n                        GameData.getInstance().defaultConfigs = conf.gameConf;\r\n                        MiniManeger.instance.shareInfo = conf.shareInfo;\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConfigManager.prototype.loadCongigs = function (url) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var jsonUrl = url;\r\n            Laya.loader.load(jsonUrl + _this.randomVersion, Laya.Handler.create(_this, function (res) {\r\n                resolve(Utils.copy(res));\r\n            }));\r\n        });\r\n    };\r\n    ConfigManager.prototype.arrToObjById = function (arr) {\r\n        var obj = {};\r\n        if (arr == null)\r\n            return obj;\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            if (arr[i].id) {\r\n                obj[arr[i].id] = arr[i];\r\n            }\r\n            else if (arr[i].ID) {\r\n                obj[arr[i].ID] = arr[i];\r\n            }\r\n            else if (arr[i].itemid) {\r\n                obj[arr[i].itemid] = arr[i];\r\n            }\r\n        }\r\n        return obj;\r\n    };\r\n    return ConfigManager;\r\n}());\r\nexport default ConfigManager;\r\n",
  "references": [
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameConfigType.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameData.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/minigame/MiniManeger.ts"
  ]
}
