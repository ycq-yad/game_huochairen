{
  "code": "import * as tslib_1 from \"tslib\";\r\nimport { GameData } from \"../common/GameData\";\r\nimport CommonTool from \"../tool/CommonTool\";\r\nimport * as DataType from \"../common/GameDataType\";\r\nimport ConfigManager from \"./ConfigManager\";\r\nimport { MiniManeger } from \"../minigame/MiniManeger\";\r\nvar InviteManager = (function () {\r\n    function InviteManager() {\r\n        this.URL = GameData.getInstance().URL_OF_INVITE;\r\n        this.inviterInfo = new DataType.netData.Inviter();\r\n        this.newPlayer = [];\r\n    }\r\n    InviteManager.getInstance = function () {\r\n        if (!InviteManager.instance_) {\r\n            InviteManager.instance_ = new InviteManager();\r\n        }\r\n        return InviteManager.instance_;\r\n    };\r\n    InviteManager.prototype.selectInfo = function (callF, obj) {\r\n        var _this = this;\r\n        if (callF === void 0) { callF = null; }\r\n        if (obj === void 0) { obj = null; }\r\n        var gameId = GameData.getInstance().gameId;\r\n        var openId = GameData.getInstance().userInfo.openId;\r\n        var msg = {};\r\n        msg.msg_type = \"16\";\r\n        msg.msg_data = {\r\n            \"gameid\": gameId,\r\n            \"openid\": openId\r\n        };\r\n        console.log(\"查询受邀人列表 ->\", msg);\r\n        HttpMgr.getInstance().sendHttp(this.URL, msg, function (e) {\r\n            var code = e[\"msg_data\"][\"error_code\"];\r\n            if (code == \"0\") {\r\n                console.log(\"查询受邀人列表成功 ->\", e);\r\n                if (e[\"msg_data\"][\"index_list\"] != \"\") {\r\n                    _this.newPlayer = e[\"msg_data\"][\"index_list\"];\r\n                }\r\n            }\r\n            else {\r\n                var str = CommonTool.errorCodeTable[code];\r\n                console.warn(\"查询受邀人列表失败：\", str);\r\n            }\r\n            if (callF && obj) {\r\n                callF.call(obj, code);\r\n            }\r\n        }, function (e) { });\r\n    };\r\n    InviteManager.prototype.createInfo = function (callF, obj) {\r\n        if (callF === void 0) { callF = null; }\r\n        if (obj === void 0) { obj = null; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, new Promise(function (res, rej) {\r\n                            var inviterOpenId = _this.inviterInfo.openId;\r\n                            var tx_url = GameData.getInstance().userInfo.avatarUrl;\r\n                            var nick = GameData.getInstance().userInfo.nick;\r\n                            var gameId = GameData.getInstance().gameId;\r\n                            var msg = {};\r\n                            msg.msg_type = \"14\";\r\n                            msg.msg_data = {\r\n                                \"openid\": inviterOpenId,\r\n                                \"url\": tx_url,\r\n                                \"name\": nick,\r\n                                \"gameid\": gameId\r\n                            };\r\n                            console.log(\"关联自己及邀请人 ->\", msg);\r\n                            HttpMgr.getInstance().sendHttp(_this.URL, msg, function (e) {\r\n                                var code = e[\"msg_data\"][\"error_code\"];\r\n                                if (code == \"0\") {\r\n                                    console.log(\"关联自己及邀请人成功...\");\r\n                                }\r\n                                else {\r\n                                    var str = CommonTool.errorCodeTable[code];\r\n                                    console.warn(\"关联自己及邀请人失败：\", str);\r\n                                }\r\n                                if (callF && obj) {\r\n                                    callF.call(obj, code);\r\n                                }\r\n                                res();\r\n                            }, function (e) { });\r\n                        })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    InviteManager.prototype.judgeInvite = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var res = MiniManeger.instance.launchOption;\r\n            console.log(\"开始关联邀请人\", res);\r\n            console.log(\"自己信息\", GameData.getInstance().userInfo);\r\n            if (res) {\r\n                var scene = res.scene;\r\n                if (scene == 1007 || scene == 1008 || scene == 1044) {\r\n                    if (GameData.getInstance().userInfo.openId && res.query && res.query[\"openid\"]) {\r\n                        _this.inviterInfo.nick = res.query[\"nick\"];\r\n                        _this.inviterInfo.openId = res.query[\"openid\"];\r\n                        if (GameData.getInstance().userInfo.openId != _this.inviterInfo.openId) {\r\n                            console.log(\"关联邀请人\", res.query);\r\n                            _this.createInfo();\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            else {\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n    InviteManager.prototype.getInviteAwardData = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var inviteConfig, lingqu, invitePlayer, dataArr, i, len, invite, awardId, canLingqu, lingqued, player, data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, ConfigManager.instance.getInviteConfig()];\r\n                    case 1:\r\n                        inviteConfig = _a.sent();\r\n                        lingqu = GameData.getInstance().invite.inviteId;\r\n                        invitePlayer = this.newPlayer;\r\n                        dataArr = [];\r\n                        for (i = 0, len = inviteConfig.length; i < len; i++) {\r\n                            invite = inviteConfig[i];\r\n                            awardId = invite.id;\r\n                            canLingqu = false;\r\n                            lingqued = false;\r\n                            player = invitePlayer[i];\r\n                            if (lingqu.indexOf(awardId) > -1)\r\n                                lingqued = true;\r\n                            if (player)\r\n                                canLingqu = true;\r\n                            data = new DataType.localData.InviteData();\r\n                            data.id = awardId;\r\n                            data.head = player ? player[\"url\"] : \"\";\r\n                            data.reward = invite.reward;\r\n                            data.lingqued = lingqued;\r\n                            data.canLingqu = canLingqu;\r\n                            dataArr.push(data);\r\n                        }\r\n                        return [2, dataArr];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return InviteManager;\r\n}());\r\nexport default InviteManager;\r\n",
  "references": [
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameData.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/tool/CommonTool.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/common/GameDataType.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/ConfigManager.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/manager/GameMgr.ts",
    "E:/laya/project/laya_firePeople2_git_ts/src/script/minigame/MiniManeger.ts"
  ]
}
