{
  "code": "var Type2GameLineToolMgr = (function () {\r\n    function Type2GameLineToolMgr() {\r\n        this.gestureUtil = new ur.DollarRecognizer();\r\n        this.curentLinesPoints = [];\r\n    }\r\n    Type2GameLineToolMgr.getInstance = function () {\r\n        if (!Type2GameLineToolMgr.instance) {\r\n            Type2GameLineToolMgr.instance = new Type2GameLineToolMgr();\r\n        }\r\n        return Type2GameLineToolMgr.instance;\r\n    };\r\n    Type2GameLineToolMgr.prototype.dressingPoints = function (points) {\r\n        if (points.length / 2 > 120) {\r\n            for (var i = 0, len = points.length / 2; i < len; i++) {\r\n                if (i % 2 == 1) {\r\n                    points.splice(i * 2, 2);\r\n                    i--;\r\n                    len--;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Type2GameLineToolMgr.prototype.addLinesPoints = function (templatLinesPoints) {\r\n        this.clearCurentLinesPoints();\r\n        console.log(\"增加模板数据--\", templatLinesPoints);\r\n        var points = [];\r\n        for (var i = 0, len = templatLinesPoints.length; i < len; i++) {\r\n            points = points.concat(templatLinesPoints[i].points);\r\n        }\r\n        this.addOneLinePoints(points);\r\n    };\r\n    Type2GameLineToolMgr.prototype.addOneLinePoints = function (points) {\r\n        if (points.length < 4) {\r\n            console.log(\"插入标准线段数据过少---\");\r\n            return;\r\n        }\r\n        var urPoints = [];\r\n        for (var i = 0, len = points.length / 2; i < len; i++) {\r\n            var urPoint = new ur.Point(points[i * 2], points[i * 2 + 1]);\r\n            urPoints.push(urPoint);\r\n        }\r\n        var name = \"level_temp_\" + this.curentLinesPoints.length;\r\n        var itemLine = new LinePoints();\r\n        itemLine.name = name;\r\n        itemLine.points = points;\r\n        this.curentLinesPoints.push(itemLine);\r\n        this.gestureUtil.AddGesture(name, urPoints);\r\n    };\r\n    Type2GameLineToolMgr.prototype.clearCurentLinesPoints = function () {\r\n        this.curentLinesPoints = [];\r\n    };\r\n    Type2GameLineToolMgr.prototype.checkAllLinesPoints = function (checkLinesPoints, checkTypeScore) {\r\n        if (checkTypeScore === void 0) { checkTypeScore = 0.1; }\r\n        var points = [];\r\n        for (var i = 0, len = checkLinesPoints.length; i < len; i++) {\r\n            points = points.concat(checkLinesPoints[i].points);\r\n        }\r\n        console.log(\"点 >>>\", JSON.stringify(points));\r\n        var result = this.checkOneLine(points);\r\n        console.log(\"result >>>\", result);\r\n        return result.Score >= checkTypeScore ? true : false;\r\n    };\r\n    Type2GameLineToolMgr.prototype.checkOneLine = function (points) {\r\n        var urPoints = [];\r\n        for (var i = 0, len = points.length / 2; i < len; i++) {\r\n            var urPoint = new ur.Point(points[i * 2], points[i * 2 + 1]);\r\n            urPoints.push(urPoint);\r\n        }\r\n        var result = this.gestureUtil.Recognize(urPoints, false);\r\n        console.log(result.Name, result.Score, result.Time);\r\n        return result;\r\n    };\r\n    Type2GameLineToolMgr.prototype.toGrayBinary = function (pixels, binary, value, sn) {\r\n        var r, g, b, avg = 0, len = pixels.length, s = '';\r\n        for (var i = 0; i < len; i += 4) {\r\n            avg += (.299 * pixels[i] + .587 * pixels[i + 1] + .114 * pixels[i + 2]);\r\n        }\r\n        avg /= (len / 4);\r\n        for (var i = 0; i < len; i += 4) {\r\n            r = .299 * pixels[i];\r\n            g = .587 * pixels[i + 1];\r\n            b = .114 * pixels[i + 2];\r\n            if (binary) {\r\n                if ((r + g + b) >= (value || avg)) {\r\n                    g = 255;\r\n                    if (sn)\r\n                        s += '1';\r\n                }\r\n                else {\r\n                    g = 0;\r\n                    if (sn)\r\n                        s += '0';\r\n                }\r\n                g = (r + g + b) > (value || avg) ? 255 : 0;\r\n            }\r\n            else {\r\n                g = r + g + b;\r\n            }\r\n            pixels[i] = g, pixels[i + 1] = g, pixels[i + 2] = g;\r\n        }\r\n        if (sn)\r\n            return s;\r\n        else\r\n            return pixels;\r\n    };\r\n    Type2GameLineToolMgr.prototype.searchTexture = function (texture1, texture2) {\r\n        var data1 = texture1.getPixels(0, 0, texture1.width, texture1.height);\r\n        data1 = this.toGrayBinary(data1, true, null, false);\r\n        console.log(\"data1\", data1);\r\n        var data2 = texture2.getPixels(0, 0, texture2.width, texture2.height);\r\n        data2 = this.toGrayBinary(data2, true, null, false);\r\n        console.log(\"data2\", data2);\r\n        var tw = texture1.width, th = texture1.height;\r\n        var similar = 0;\r\n        for (var i = 0, len = tw * th; i < len; i++) {\r\n            if (data2[i] == data1[i])\r\n                similar++;\r\n        }\r\n        similar = (similar / (tw * th)) * 100;\r\n        console.log(\"匹配比例：\", similar);\r\n        return similar;\r\n    };\r\n    Type2GameLineToolMgr.prototype.searchTexture1 = function (texture1, texture2) {\r\n        var drawPixels = texture1.getPixels(0, 0, texture1.width, texture1.height);\r\n        console.log(\"draw Pixels\", drawPixels);\r\n        var imgPixels = texture2.getPixels(0, 0, texture2.width, texture2.height);\r\n        console.log(\"img Pixels\", imgPixels);\r\n        var tw = texture1.width, th = texture1.height;\r\n        var similar = 0;\r\n        var r = 0, g = 0, b = 0, a = 0;\r\n        var r1 = 0, g1 = 0, b1 = 0, a1 = 0;\r\n        for (var i = 0, len = tw * th * 4; i < len; i += 4) {\r\n            r += drawPixels[i];\r\n            g += drawPixels[i + 1];\r\n            b += drawPixels[i + 2];\r\n            a += drawPixels[i + 3];\r\n            r1 += imgPixels[i];\r\n            g1 += imgPixels[i + 1];\r\n            b1 += imgPixels[i + 2];\r\n            a1 += imgPixels[i + 3];\r\n            var rgba1 = \"\" + drawPixels[i] + drawPixels[i + 1] + drawPixels[i + 2] + drawPixels[i + 3];\r\n            var rgba2 = \"\" + imgPixels[i] + imgPixels[i + 1] + imgPixels[i + 2] + imgPixels[i + 3];\r\n            if (rgba1 == rgba2)\r\n                similar++;\r\n        }\r\n        var ratio = (similar / (tw * th)) * 100;\r\n        console.log(\"rgba draw：\", r, g, b, a);\r\n        console.log(\"rgba img：\", r1, g1, b1, a1);\r\n        console.log(\"匹配比例：\", similar, ratio, tw * th);\r\n        return ratio;\r\n    };\r\n    Type2GameLineToolMgr.prototype.test = function (parent) {\r\n        var _this = this;\r\n        Laya.loader.load(\"resource/assets/imgs/levels/type2/1/lv_1.png\", Laya.Handler.create(this, function (texture1) {\r\n            Laya.loader.load(\"resource/assets/imgs/levels/type2/2/lv_2.png\", Laya.Handler.create(_this, function (texture2) {\r\n                var data1 = texture1.getPixels(0, 0, 256, 239);\r\n                var data2 = texture2.getPixels(0, 0, 256, 239);\r\n                var tw = 256, th = 239;\r\n                var similar = 0;\r\n                var r = 0, g = 0, b = 0, a = 0;\r\n                var r1 = 0, g1 = 0, b1 = 0, a1 = 0;\r\n                for (var i = 0, len = tw * th * 4; i < len; i += 4) {\r\n                    r += data1[i];\r\n                    g += data1[i + 1];\r\n                    b += data1[i + 2];\r\n                    a += data1[i + 3];\r\n                    r1 += data2[i];\r\n                    g1 += data2[i + 1];\r\n                    b1 += data2[i + 2];\r\n                    a1 += data2[i + 3];\r\n                    var rgba1 = \"\" + data1[i] + data1[i + 1] + data1[i + 2] + data1[i + 3];\r\n                    var rgba2 = \"\" + data2[i] + data2[i + 1] + data2[i + 2] + data2[i + 3];\r\n                    if (rgba1 == rgba2)\r\n                        similar++;\r\n                }\r\n                var ratio = (similar / (tw * th)) * 100;\r\n                console.log(\"rgba draw：\", r, g, b, a);\r\n                console.log(\"rgba img：\", r1, g1, b1, a1);\r\n                console.log(\"匹配比例：\", similar, ratio, tw * th);\r\n            }), null, Laya.Loader.TEXTURE2D);\r\n        }), null, Laya.Loader.TEXTURE2D);\r\n    };\r\n    return Type2GameLineToolMgr;\r\n}());\r\nexport default Type2GameLineToolMgr;\r\nvar LinePoints = (function () {\r\n    function LinePoints() {\r\n    }\r\n    return LinePoints;\r\n}());\r\nexport { LinePoints };\r\n",
  "references": []
}
